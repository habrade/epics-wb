/*
  Register definitions for slave core: TestWB

  * File           : wbtest.h
  * Author         : auto-generated by wbgen2 from wbtest.wb
  * Created        : Wed Aug 12 18:17:26 2015
  * Standard       : ANSI C

    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE wbtest.wb
    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!

*/

#ifndef __WBGEN2_REGDEFS_WBTEST_WB
#define __WBGEN2_REGDEFS_WBTEST_WB

#include <inttypes.h>

#if defined( __GNUC__)
#define PACKED __attribute__ ((packed))
#else
#error "Unsupported compiler?"
#endif

#ifndef __WBGEN2_MACROS_DEFINED__
#define __WBGEN2_MACROS_DEFINED__
#define WBGEN2_GEN_MASK(offset, size) (((1ULL<<(size))-1) << (offset))
#define WBGEN2_GEN_WRITE(value, offset, size) (((value) & ((1<<(size))-1)) << (offset))
#define WBGEN2_GEN_READ(reg, offset, size) (((reg) >> (offset)) & ((1<<(size))-1))
#define WBGEN2_SIGN_EXTEND(value, bits) (((value) & (1<<bits) ? ~((1<<(bits))-1): 0 ) | (value))
#define WBGEN2_READ_ONLY	0x01
#define WBGEN2_WRITE_ONLY	0x10
#define WBGEN2_READ_WRITE	(WBGEN2_READ_ONLY | WBGEN2_WRITE_ONLY)
#ifdef __WBGEN2_ENABLE_DESC__ 
#define WBGEN2_DESC(desc) desc
#else
#define WBGEN2_DESC(desc) "" 
#endif
#endif


/* definitions for register: Control Statut Register */

/* definitions for field: Reset bit in reg: Control Statut Register */
#define WB2_TEST_CSR_RST_INDEX                0
#define WB2_TEST_CSR_RST_PREFIX               "rst"
#define WB2_TEST_CSR_RST_NAME                 "Reset bit"
#define WB2_TEST_CSR_RST_DESC                 WBGEN2_DESC("write 1 to reset something")
#define WB2_TEST_CSR_RST_ACCESS               WBGEN2_READ_WRITE
#define WB2_TEST_CSR_RST_NBFP                 0
#define WB2_TEST_CSR_RST_SIGN                 0
#define WB2_TEST_CSR_RST_MASK                 WBGEN2_GEN_MASK(0, 1)
#define WB2_TEST_CSR_RST_SHIFT                0
#define WB2_TEST_CSR_RST                      WBGEN2_GEN_MASK(0, 1)

/* definitions for field: Enable in reg: Control Statut Register */
#define WB2_TEST_CSR_ENABLE_INDEX             1
#define WB2_TEST_CSR_ENABLE_PREFIX            "enable"
#define WB2_TEST_CSR_ENABLE_NAME              "Enable"
#define WB2_TEST_CSR_ENABLE_DESC              WBGEN2_DESC("This registers indicates the ADC chip selected")
#define WB2_TEST_CSR_ENABLE_ACCESS            WBGEN2_READ_WRITE
#define WB2_TEST_CSR_ENABLE_NBFP              0
#define WB2_TEST_CSR_ENABLE_SIGN              0
#define WB2_TEST_CSR_ENABLE_MASK              WBGEN2_GEN_MASK(1, 1)
#define WB2_TEST_CSR_ENABLE_SHIFT             1
#define WB2_TEST_CSR_ENABLE                   WBGEN2_GEN_MASK(1, 1)

/* definitions for field: Number in reg: Control Statut Register */
#define WB2_TEST_CSR_NUMBER_INDEX             2
#define WB2_TEST_CSR_NUMBER_PREFIX            "number"
#define WB2_TEST_CSR_NUMBER_NAME              "Number"
#define WB2_TEST_CSR_NUMBER_DESC              WBGEN2_DESC("This registers indicates a number that need to be read")
#define WB2_TEST_CSR_NUMBER_ACCESS            WBGEN2_READ_ONLY
#define WB2_TEST_CSR_NUMBER_NBFP              0
#define WB2_TEST_CSR_NUMBER_SIGN              0
#define WB2_TEST_CSR_NUMBER_MASK              WBGEN2_GEN_MASK(8, 8)
#define WB2_TEST_CSR_NUMBER_SHIFT             8
#define WB2_TEST_CSR_NUMBER_W(value)          WBGEN2_GEN_WRITE(value, 8, 8)
#define WB2_TEST_CSR_NUMBER_R(reg)            WBGEN2_GEN_READ(reg, 8, 8)

/* definitions for register: ADC_IQ */

/* definitions for field: I in reg: ADC_IQ */
#define WB2_TEST_ADC_I_INDEX                  0
#define WB2_TEST_ADC_I_PREFIX                 "I"
#define WB2_TEST_ADC_I_NAME                   "I"
#define WB2_TEST_ADC_I_DESC                   WBGEN2_DESC("I Voltage units: 16 bits with 2 bits integer (2'complement)")
#define WB2_TEST_ADC_I_ACCESS                 WBGEN2_READ_WRITE
#define WB2_TEST_ADC_I_NBFP                   14
#define WB2_TEST_ADC_I_SIGN                   2
#define WB2_TEST_ADC_I_MASK                   WBGEN2_GEN_MASK(0, 16)
#define WB2_TEST_ADC_I_SHIFT                  0
#define WB2_TEST_ADC_I_W(value)               WBGEN2_GEN_WRITE(value, 0, 16)
#define WB2_TEST_ADC_I_R(reg)                 WBGEN2_GEN_READ(reg, 0, 16)

/* definitions for field: Q in reg: ADC_IQ */
#define WB2_TEST_ADC_Q_INDEX                  1
#define WB2_TEST_ADC_Q_PREFIX                 "Q"
#define WB2_TEST_ADC_Q_NAME                   "Q"
#define WB2_TEST_ADC_Q_DESC                   WBGEN2_DESC("Q Minimum Reference directly [-sqrt(2):sqrt(2)]V. Voltage units: 16 bits with 2 bits integer (2'complement)")
#define WB2_TEST_ADC_Q_ACCESS                 WBGEN2_READ_WRITE
#define WB2_TEST_ADC_Q_NBFP                   14
#define WB2_TEST_ADC_Q_SIGN                   2
#define WB2_TEST_ADC_Q_MASK                   WBGEN2_GEN_MASK(16, 16)
#define WB2_TEST_ADC_Q_SHIFT                  16
#define WB2_TEST_ADC_Q_W(value)               WBGEN2_GEN_WRITE(value, 16, 16)
#define WB2_TEST_ADC_Q_R(reg)                 WBGEN2_GEN_READ(reg, 16, 16)

/* definitions for register: Full Integer */

/* definitions for field: U32 in reg: Full Integer */
#define WB2_TEST_FULL_U32_INDEX               0
#define WB2_TEST_FULL_U32_PREFIX              "u32"
#define WB2_TEST_FULL_U32_NAME                "U32"
#define WB2_TEST_FULL_U32_DESC                WBGEN2_DESC("Full field")
#define WB2_TEST_FULL_U32_ACCESS              WBGEN2_READ_ONLY
#define WB2_TEST_FULL_U32_NBFP                0
#define WB2_TEST_FULL_U32_SIGN                0
#define WB2_TEST_FULL_U32_MASK                WBGEN2_GEN_MASK(0, 32)
#define WB2_TEST_FULL_U32_SHIFT               0
#define WB2_TEST_FULL_U32_W(value)            WBGEN2_GEN_WRITE(value, 0, 32)
#define WB2_TEST_FULL_U32_R(reg)              WBGEN2_GEN_READ(reg, 0, 32)

/* definitions for register: Full Fixed Integer */

/* definitions for field: U32 in reg: Full Fixed Integer */
#define WB2_TEST_FULLFIXED_ALL_INDEX          0
#define WB2_TEST_FULLFIXED_ALL_PREFIX         "all"
#define WB2_TEST_FULLFIXED_ALL_NAME           "U32"
#define WB2_TEST_FULLFIXED_ALL_DESC           WBGEN2_DESC("Full field")
#define WB2_TEST_FULLFIXED_ALL_ACCESS         WBGEN2_READ_ONLY
#define WB2_TEST_FULLFIXED_ALL_NBFP           32
#define WB2_TEST_FULLFIXED_ALL_SIGN           2
#define WB2_TEST_FULLFIXED_ALL_MASK           WBGEN2_GEN_MASK(0, 32)
#define WB2_TEST_FULLFIXED_ALL_SHIFT          0
#define WB2_TEST_FULLFIXED_ALL_W(value)       WBGEN2_GEN_WRITE(value, 0, 32)
#define WB2_TEST_FULLFIXED_ALL_R(reg)         WBGEN2_GEN_READ(reg, 0, 32)

/* definitions for register: TestByteSign */

/* definitions for field: Unsigned in reg: TestByteSign */
#define WB2_TEST_TESTBSIGN_U_INDEX            0
#define WB2_TEST_TESTBSIGN_U_PREFIX           "u"
#define WB2_TEST_TESTBSIGN_U_NAME             "Unsigned"
#define WB2_TEST_TESTBSIGN_U_DESC             WBGEN2_DESC("Unsigned byte")
#define WB2_TEST_TESTBSIGN_U_ACCESS           WBGEN2_READ_ONLY
#define WB2_TEST_TESTBSIGN_U_NBFP             0
#define WB2_TEST_TESTBSIGN_U_SIGN             0
#define WB2_TEST_TESTBSIGN_U_MASK             WBGEN2_GEN_MASK(0, 8)
#define WB2_TEST_TESTBSIGN_U_SHIFT            0
#define WB2_TEST_TESTBSIGN_U_W(value)         WBGEN2_GEN_WRITE(value, 0, 8)
#define WB2_TEST_TESTBSIGN_U_R(reg)           WBGEN2_GEN_READ(reg, 0, 8)

/* definitions for field: Sign1 MSB in reg: TestByteSign */
#define WB2_TEST_TESTBSIGN_SIGN1_INDEX        1
#define WB2_TEST_TESTBSIGN_SIGN1_PREFIX       "sign1"
#define WB2_TEST_TESTBSIGN_SIGN1_NAME         "Sign1 MSB"
#define WB2_TEST_TESTBSIGN_SIGN1_DESC         WBGEN2_DESC("MSB Signess")
#define WB2_TEST_TESTBSIGN_SIGN1_ACCESS       WBGEN2_READ_ONLY
#define WB2_TEST_TESTBSIGN_SIGN1_NBFP         0
#define WB2_TEST_TESTBSIGN_SIGN1_SIGN         1
#define WB2_TEST_TESTBSIGN_SIGN1_MASK         WBGEN2_GEN_MASK(8, 8)
#define WB2_TEST_TESTBSIGN_SIGN1_SHIFT        8
#define WB2_TEST_TESTBSIGN_SIGN1_W(value)     WBGEN2_GEN_WRITE(value, 8, 8)
#define WB2_TEST_TESTBSIGN_SIGN1_R(reg)       WBGEN2_GEN_READ(reg, 8, 8)

/* definitions for field: Sign2C in reg: TestByteSign */
#define WB2_TEST_TESTBSIGN_SIGN2_INDEX        2
#define WB2_TEST_TESTBSIGN_SIGN2_PREFIX       "sign2"
#define WB2_TEST_TESTBSIGN_SIGN2_NAME         "Sign2C"
#define WB2_TEST_TESTBSIGN_SIGN2_DESC         WBGEN2_DESC("2Complement's signess")
#define WB2_TEST_TESTBSIGN_SIGN2_ACCESS       WBGEN2_READ_ONLY
#define WB2_TEST_TESTBSIGN_SIGN2_NBFP         0
#define WB2_TEST_TESTBSIGN_SIGN2_SIGN         1
#define WB2_TEST_TESTBSIGN_SIGN2_MASK         WBGEN2_GEN_MASK(16, 8)
#define WB2_TEST_TESTBSIGN_SIGN2_SHIFT        16
#define WB2_TEST_TESTBSIGN_SIGN2_W(value)     WBGEN2_GEN_WRITE(value, 16, 8)
#define WB2_TEST_TESTBSIGN_SIGN2_R(reg)       WBGEN2_GEN_READ(reg, 16, 8)

/* definitions for register: TestByteFixed */

/* definitions for field: Unsigned in reg: TestByteFixed */
#define WB2_TEST_TESTBFIXED_U_INDEX           0
#define WB2_TEST_TESTBFIXED_U_PREFIX          "u"
#define WB2_TEST_TESTBFIXED_U_NAME            "Unsigned"
#define WB2_TEST_TESTBFIXED_U_DESC            WBGEN2_DESC("Unsigned byte")
#define WB2_TEST_TESTBFIXED_U_ACCESS          WBGEN2_READ_ONLY
#define WB2_TEST_TESTBFIXED_U_NBFP            8
#define WB2_TEST_TESTBFIXED_U_SIGN            0
#define WB2_TEST_TESTBFIXED_U_MASK            WBGEN2_GEN_MASK(0, 8)
#define WB2_TEST_TESTBFIXED_U_SHIFT           0
#define WB2_TEST_TESTBFIXED_U_W(value)        WBGEN2_GEN_WRITE(value, 0, 8)
#define WB2_TEST_TESTBFIXED_U_R(reg)          WBGEN2_GEN_READ(reg, 0, 8)

/* definitions for field: Sign1 MSB in reg: TestByteFixed */
#define WB2_TEST_TESTBFIXED_SIGN1_INDEX       1
#define WB2_TEST_TESTBFIXED_SIGN1_PREFIX      "sign1"
#define WB2_TEST_TESTBFIXED_SIGN1_NAME        "Sign1 MSB"
#define WB2_TEST_TESTBFIXED_SIGN1_DESC        WBGEN2_DESC("MSB Signess")
#define WB2_TEST_TESTBFIXED_SIGN1_ACCESS      WBGEN2_READ_ONLY
#define WB2_TEST_TESTBFIXED_SIGN1_NBFP        7
#define WB2_TEST_TESTBFIXED_SIGN1_SIGN        1
#define WB2_TEST_TESTBFIXED_SIGN1_MASK        WBGEN2_GEN_MASK(8, 8)
#define WB2_TEST_TESTBFIXED_SIGN1_SHIFT       8
#define WB2_TEST_TESTBFIXED_SIGN1_W(value)    WBGEN2_GEN_WRITE(value, 8, 8)
#define WB2_TEST_TESTBFIXED_SIGN1_R(reg)      WBGEN2_GEN_READ(reg, 8, 8)

/* definitions for field: Sign2C in reg: TestByteFixed */
#define WB2_TEST_TESTBFIXED_SIGN2_INDEX       2
#define WB2_TEST_TESTBFIXED_SIGN2_PREFIX      "sign2"
#define WB2_TEST_TESTBFIXED_SIGN2_NAME        "Sign2C"
#define WB2_TEST_TESTBFIXED_SIGN2_DESC        WBGEN2_DESC("2Complement's signess")
#define WB2_TEST_TESTBFIXED_SIGN2_ACCESS      WBGEN2_READ_ONLY
#define WB2_TEST_TESTBFIXED_SIGN2_NBFP        8
#define WB2_TEST_TESTBFIXED_SIGN2_SIGN        1
#define WB2_TEST_TESTBFIXED_SIGN2_MASK        WBGEN2_GEN_MASK(16, 8)
#define WB2_TEST_TESTBFIXED_SIGN2_SHIFT       16
#define WB2_TEST_TESTBFIXED_SIGN2_W(value)    WBGEN2_GEN_WRITE(value, 16, 8)
#define WB2_TEST_TESTBFIXED_SIGN2_R(reg)      WBGEN2_GEN_READ(reg, 16, 8)

/* definitions for field: Default in reg: TestByteFixed */
#define WB2_TEST_TESTBFIXED_DEFAULT_INDEX     3
#define WB2_TEST_TESTBFIXED_DEFAULT_PREFIX    "default"
#define WB2_TEST_TESTBFIXED_DEFAULT_NAME      "Default"
#define WB2_TEST_TESTBFIXED_DEFAULT_DESC      WBGEN2_DESC("Default signess (2complements)")
#define WB2_TEST_TESTBFIXED_DEFAULT_ACCESS    WBGEN2_READ_ONLY
#define WB2_TEST_TESTBFIXED_DEFAULT_NBFP      8
#define WB2_TEST_TESTBFIXED_DEFAULT_SIGN      2
#define WB2_TEST_TESTBFIXED_DEFAULT_MASK      WBGEN2_GEN_MASK(24, 8)
#define WB2_TEST_TESTBFIXED_DEFAULT_SHIFT     24
#define WB2_TEST_TESTBFIXED_DEFAULT_W(value)  WBGEN2_GEN_WRITE(value, 24, 8)
#define WB2_TEST_TESTBFIXED_DEFAULT_R(reg)    WBGEN2_GEN_READ(reg, 24, 8)


/* [0x0]: REG Control Statut Register */
#define WB2_TEST_REG_CSR_PREFIX               "CSR"
#define WB2_TEST_REG_CSR_NAME                 "Control Statut Register"
#define WB2_TEST_REG_CSR_DESC                 WBGEN2_DESC("Reset")
#define WB2_TEST_REG_CSR_NFIELDS              3
#define WB2_TEST_REG_CSR                      0x00000000

/* [0x4]: REG ADC_IQ */
#define WB2_TEST_REG_ADC_PREFIX               "adc"
#define WB2_TEST_REG_ADC_NAME                 "ADC_IQ"
#define WB2_TEST_REG_ADC_DESC                 WBGEN2_DESC("I,Q repreTypicial Amplitude P.")
#define WB2_TEST_REG_ADC_NFIELDS              2
#define WB2_TEST_REG_ADC                      0x00000004

/* [0x8]: REG Full Integer */
#define WB2_TEST_REG_FULL_PREFIX              "Full"
#define WB2_TEST_REG_FULL_NAME                "Full Integer"
#define WB2_TEST_REG_FULL_DESC                WBGEN2_DESC("Minimun Voltage register until Reset")
#define WB2_TEST_REG_FULL_NFIELDS             1
#define WB2_TEST_REG_FULL                     0x00000008

/* [0xc]: REG Full Fixed Integer */
#define WB2_TEST_REG_FULLFIXED_PREFIX         "FullFixed"
#define WB2_TEST_REG_FULLFIXED_NAME           "Full Fixed Integer"
#define WB2_TEST_REG_FULLFIXED_DESC           WBGEN2_DESC("Minimun Voltage register until Reset")
#define WB2_TEST_REG_FULLFIXED_NFIELDS        1
#define WB2_TEST_REG_FULLFIXED                0x0000000c

/* [0x10]: REG TestByteSign */
#define WB2_TEST_REG_TESTBSIGN_PREFIX         "testbsign"
#define WB2_TEST_REG_TESTBSIGN_NAME           "TestByteSign"
#define WB2_TEST_REG_TESTBSIGN_DESC           WBGEN2_DESC("Test on the 4 bytes")
#define WB2_TEST_REG_TESTBSIGN_NFIELDS        3
#define WB2_TEST_REG_TESTBSIGN                0x00000010

/* [0x14]: REG TestByteFixed */
#define WB2_TEST_REG_TESTBFIXED_PREFIX        "testbfixed"
#define WB2_TEST_REG_TESTBFIXED_NAME          "TestByteFixed"
#define WB2_TEST_REG_TESTBFIXED_DESC          WBGEN2_DESC("Test full fixed point on the 4 bytes")
#define WB2_TEST_REG_TESTBFIXED_NFIELDS       4
#define WB2_TEST_REG_TESTBFIXED               0x00000014


#define WB2_TEST_PERIPH_PREFIX                "WB2_test"
#define WB2_TEST_PERIPH_NAME                  "TestWB"
#define WB2_TEST_PERIPH_DESC                  WBGEN2_DESC("Fake peripheral to test all possibilities")

#endif
